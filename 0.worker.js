self["webpackChunk"]([0],{

/***/ "../pkg/mysterious_murder.js":
/*!***********************************!*\
  !*** ../pkg/mysterious_murder.js ***!
  \***********************************/
/*! exports provided: __wbg_postMessage_59e84aaf0491a258, run_simulation, __wbg_error_4bb6c2a97407129a, __wbg_new_59cb74e423758ede, __wbg_stack_558ba5917b466edd, __wbindgen_string_new, __wbindgen_throw, __wbindgen_object_drop_ref */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_postMessage_59e84aaf0491a258\", function() { return __wbg_postMessage_59e84aaf0491a258; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"run_simulation\", function() { return run_simulation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_4bb6c2a97407129a\", function() { return __wbg_error_4bb6c2a97407129a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_59cb74e423758ede\", function() { return __wbg_new_59cb74e423758ede; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_558ba5917b466edd\", function() { return __wbg_stack_558ba5917b466edd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony import */ var _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mysterious_murder_bg */ \"../pkg/mysterious_murder_bg.wasm\");\n\nconst heap = new Array(32);\nheap.fill(undefined);\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction __wbg_postMessage_59e84aaf0491a258(arg0) {\n  try {\n    postMessage(getObject(arg0));\n  } catch (e) {\n    console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", e);\n    throw e;\n  }\n}\nlet WASM_VECTOR_LEN = 0;\nlet cachedTextEncoder = new TextEncoder('utf-8');\nlet cachegetUint8Memory = null;\n\nfunction getUint8Memory() {\n  if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n    cachegetUint8Memory = new Uint8Array(_mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n  }\n\n  return cachegetUint8Memory;\n}\n\nlet passStringToWasm;\n\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n  passStringToWasm = function (arg) {\n    if (typeof arg !== 'string') throw new Error('expected a string argument');\n    let size = arg.length;\n\n    let ptr = _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](size);\n\n    let writeOffset = 0;\n\n    while (true) {\n      const view = getUint8Memory().subarray(ptr + writeOffset, ptr + size);\n      const {\n        read,\n        written\n      } = cachedTextEncoder.encodeInto(arg, view);\n      writeOffset += written;\n\n      if (read === arg.length) {\n        break;\n      }\n\n      arg = arg.substring(read);\n      ptr = _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"](ptr, size, size += arg.length * 3);\n    }\n\n    WASM_VECTOR_LEN = writeOffset;\n    return ptr;\n  };\n} else {\n  passStringToWasm = function (arg) {\n    if (typeof arg !== 'string') throw new Error('expected a string argument');\n    const buf = cachedTextEncoder.encode(arg);\n\n    const ptr = _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](buf.length);\n\n    getUint8Memory().set(buf, ptr);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  };\n}\n\nfunction _assertNum(n) {\n  if (typeof n !== 'number') throw new Error('expected a number argument');\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\n\nfunction globalArgumentPtr() {\n  if (cachedGlobalArgumentPtr === null) {\n    cachedGlobalArgumentPtr = _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_global_argument_ptr\"]();\n  }\n\n  return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\n\nfunction getUint32Memory() {\n  if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n    cachegetUint32Memory = new Uint32Array(_mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n  }\n\n  return cachegetUint32Memory;\n}\n/**\n* @param {string} data\n* @param {number} seed\n* @returns {string}\n*/\n\n\nfunction run_simulation(data, seed) {\n  const ptr0 = passStringToWasm(data);\n  const len0 = WASM_VECTOR_LEN;\n\n  _assertNum(seed);\n\n  const retptr = globalArgumentPtr();\n\n  try {\n    _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"run_simulation\"](retptr, ptr0, len0, seed);\n    const mem = getUint32Memory();\n    const rustptr = mem[retptr / 4];\n    const rustlen = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(rustptr, rustlen).slice();\n\n    _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](rustptr, rustlen * 1);\n\n    return realRet;\n  } finally {\n    _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n  }\n}\nfunction __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n  let varg0 = getStringFromWasm(arg0, arg1);\n  varg0 = varg0.slice();\n\n  _mysterious_murder_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](arg0, arg1 * 1);\n\n  try {\n    console.error(varg0);\n  } catch (e) {\n    console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", e);\n    throw e;\n  }\n}\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  if (typeof heap_next !== 'number') throw new Error('corrupt heap');\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction __wbg_new_59cb74e423758ede() {\n  try {\n    return addHeapObject(new Error());\n  } catch (e) {\n    console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", e);\n    throw e;\n  }\n}\nfunction __wbg_stack_558ba5917b466edd(ret, arg0) {\n  try {\n    const retptr = passStringToWasm(getObject(arg0).stack);\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n  } catch (e) {\n    console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", e);\n    throw e;\n  }\n}\nfunction __wbindgen_string_new(p, l) {\n  return addHeapObject(getStringFromWasm(p, l));\n}\nfunction __wbindgen_throw(ptr, len) {\n  throw new Error(getStringFromWasm(ptr, len));\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) {\n  dropObject(i);\n}\n\n//# sourceURL=webpack:///../pkg/mysterious_murder.js?");

/***/ }),

/***/ "../pkg/mysterious_murder_bg.wasm":
/*!****************************************!*\
  !*** ../pkg/mysterious_murder_bg.wasm ***!
  \****************************************/
/*! exports provided: memory, __rustc_debug_gdb_scripts_section__, run_simulation, __wbindgen_global_argument_ptr, __wbindgen_malloc, __wbindgen_realloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./mysterious_murder */ \"../pkg/mysterious_murder.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/mysterious_murder_bg.wasm?");

/***/ }),

/***/ "./worker-start.js":
/*!*************************!*\
  !*** ./worker-start.js ***!
  \*************************/
/*! exports provided: onmessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onmessage\", function() { return onmessage; });\n/* harmony import */ var mysterious_murder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysterious-murder */ \"../pkg/mysterious_murder.js\");\n\nfunction onmessage(event) {\n  if (event.data.run) mysterious_murder__WEBPACK_IMPORTED_MODULE_0__[\"run_simulation\"](JSON.stringify(event.data.run), event.data.seed);\n}\n\n//# sourceURL=webpack:///./worker-start.js?");

/***/ })

});